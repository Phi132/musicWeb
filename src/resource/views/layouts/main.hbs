<!DOCTYPE html>
<html lang="en" data-theme="" >

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"
        integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <link rel="stylesheet" href="https://pro.fontawesome.com/releases/v5.10.0/css/all.css"
        integrity="sha384-AYmEC3Yw5cVb3ZcuHtOA93w35dYTsvhLPVnYs9eStHfGJvOvKxVfELGroGkvsg+p" crossorigin="anonymous" />


    <link rel="stylesheet" href="/css/app.css">
    <title>MUSIC</title>
</head>

<body>
    <div class="mucsicWeb">
        <div class="header">
            <div class="header-content">
                <div class="h-content-left">
                    <div class="arrow">
                        <div class="arrow-retreat">
                            <a href="/">
                                <i class="fas fa-arrow-left"></i>

                            </a>
                        </div>
                        <div class="arrow-advance active-trans-page">
                            <a href="/mymusic">
                                <i class="fas fa-arrow-right"></i>

                            </a>
                        </div>
                    </div>

                    <div class="header-search">
                        <i class="fas fa-search"></i>
                        <input class="input-search-header" type="search" placeholder="Search" aria-label="Search">

                        <div class="search-more-click">
                            <ul class="search-more">
                                <li class="search-more-item">
                                    <i class="fas fa-search"></i>
                                    <div class="text-search">rồi tới luôn</div>
                                </li>
                                <li class="search-more-item">

                                    <i class="fas fa-search"></i>

                                    <div class="text-search">rồi tới luôn</div>
                                </li>
                                <li class="search-more-item">

                                    <i class="fas fa-search"></i>

                                    <div class="text-search">rồi tới luôn</div>
                                </li>
                                <li class="search-more-item">

                                    <i class="fas fa-search"></i>

                                    <div class="text-search">rồi tới luôn</div>
                                </li>
                                <li class="search-more-item">

                                    <i class="fas fa-search"></i>

                                    <div class="text-search">rồi tới luôn</div>
                                </li>

                            </ul>
                        </div>

                    </div>
                </div>
                <div class="h-content-right">
                    <div class="theme" data-toggle="tooltip" data-placement="bottom" title="Giao Diện">
                        <button class="btn-theme">
                            <i class="icon-theme">
                                <svg width="20" height="20" viewBox="0 0 20 20">
                                    <defs>
                                        <linearGradient id="j32lhg93hd" x1="62.206%" x2="18.689%" y1="70.45%"
                                            y2="39.245%">
                                            <stop offset="0%" stop-color="#F81212"></stop>
                                            <stop offset="100%" stop-color="red"></stop>
                                        </linearGradient>
                                        <linearGradient id="hjoavsus6g" x1="50%" x2="11.419%" y1="23.598%" y2="71.417%">
                                            <stop offset="0%" stop-color="#00F"></stop>
                                            <stop offset="100%" stop-color="#0031FF"></stop>
                                        </linearGradient>
                                        <linearGradient id="la1y5u3dvi" x1="65.655%" x2="25.873%" y1="18.825%"
                                            y2="56.944%">
                                            <stop offset="0%" stop-color="#FFA600"></stop>
                                            <stop offset="100%" stop-color="orange"></stop>
                                        </linearGradient>
                                        <linearGradient id="2dsmrlvdik" x1="24.964%" x2="63.407%" y1="8.849%"
                                            y2="55.625%">
                                            <stop offset="0%" stop-color="#13EFEC"></stop>
                                            <stop offset="100%" stop-color="#00E8DF"></stop>
                                        </linearGradient>
                                        <filter id="4a7imk8mze" width="230%" height="230%" x="-65%" y="-65%"
                                            filterUnits="objectBoundingBox">
                                            <feGaussianBlur in="SourceGraphic" stdDeviation="3.9"></feGaussianBlur>
                                        </filter>
                                        <filter id="301mo6jeah" width="312.7%" height="312.7%" x="-106.4%" y="-106.4%"
                                            filterUnits="objectBoundingBox">
                                            <feGaussianBlur in="SourceGraphic" stdDeviation="3.9"></feGaussianBlur>
                                        </filter>
                                        <filter id="b2zvzgq7fj" width="295%" height="295%" x="-97.5%" y="-97.5%"
                                            filterUnits="objectBoundingBox">
                                            <feGaussianBlur in="SourceGraphic" stdDeviation="3.9"></feGaussianBlur>
                                        </filter>
                                        <filter id="a1wq161tvl" width="256%" height="256%" x="-78%" y="-78%"
                                            filterUnits="objectBoundingBox">
                                            <feGaussianBlur in="SourceGraphic" stdDeviation="3.9"></feGaussianBlur>
                                        </filter>
                                        <path id="qtpqrj1oda"
                                            d="M3.333 14.167V5.833l-1.666.834L0 3.333 3.333 0h3.334c.04 1.57.548 2.4 1.524 2.492l.142.008C9.403 2.478 9.958 1.645 10 0h3.333l3.334 3.333L15 6.667l-1.667-.834v8.334h-10z">
                                        </path>
                                        <path id="jggzvnjgfc" d="M0 0H20V20H0z"></path>
                                        <path id="2eiwxjmc7m"
                                            d="M3.333 14.167V5.833l-1.666.834L0 3.333 3.333 0h3.334c.04 1.57.548 2.4 1.524 2.492l.142.008C9.403 2.478 9.958 1.645 10 0h3.333l3.334 3.333L15 6.667l-1.667-.834v8.334h-10z">
                                        </path>
                                    </defs>
                                    <g fill="none" fill-rule="evenodd" transform="translate(2 3)">
                                        <mask id="tinejqaasb" fill="#fff">
                                            <use xlink:href="#qtpqrj1oda"></use>
                                        </mask>
                                        <use fill="#FFF" fill-opacity="0" xlink:href="#qtpqrj1oda"></use>
                                        <g mask="url(#tinejqaasb)">
                                            <g transform="translate(-2 -3)">
                                                <mask id="uf3ckvfvpf" fill="#fff">
                                                    <use xlink:href="#jggzvnjgfc"></use>
                                                </mask>
                                                <use fill="#D8D8D8" xlink:href="#jggzvnjgfc"></use>
                                                <circle cx="8.9" cy="6.8" r="9" fill="url(#j32lhg93hd)"
                                                    filter="url(#4a7imk8mze)" mask="url(#uf3ckvfvpf)"></circle>
                                                <circle cx="9.3" cy="13.7" r="5.5" fill="url(#hjoavsus6g)"
                                                    filter="url(#301mo6jeah)" mask="url(#uf3ckvfvpf)"></circle>
                                                <circle cx="15.9" cy="6.9" r="6" fill="url(#la1y5u3dvi)"
                                                    filter="url(#b2zvzgq7fj)" mask="url(#uf3ckvfvpf)"></circle>
                                                <circle cx="16.4" cy="17.7" r="7.5" fill="url(#2dsmrlvdik)"
                                                    filter="url(#a1wq161tvl)" mask="url(#uf3ckvfvpf)"></circle>
                                            </g>
                                        </g>
                                        <use fill="#FFF" fill-opacity="0.05" xlink:href="#2eiwxjmc7m"></use>
                                    </g>
                                </svg>
                            </i>


                        </button>
                    </div>

                    <input type="file" name="upload-btn" id="upload-btn" style="display: none;">
                    <label for="upload-btn">
                        <div class="upload">
                            <a class="btn-theme-link" tabindex="0">
                                <i class="fas fa-cloud-upload-alt"></i>
                            </a>
                        </div>
                    </label>


                    <div class="setting-main">
                        <div class="setting">
                            <button class="btn-theme">
                                <i class="fas fa-cog"></i>
                            </button>

                        </div>
                    </div>
                    <div class="profile">
                        <div class="progile-avt">
                            <button class="btn-theme">
                                <img src="https://s120-ava-talk.zadn.vn/7/4/3/5/61/120/162864bc3fb9fea846983427858d3dd1.jpg"
                                    alt="" class="img-profile">
                            </button>

                        </div>
                    </div>
                </div>
            </div>


        </div>
        {{{body}}}

        {{!-- sidebar --}}
        <aside class="sidebar">
            <div class="sidebar-wrapper">
                <nav class="sidebar-brand">
                    <div class="logo-brand">
                        <a href="/">
                            <img class="img-logo" src="https://sanvieclamdanang.com/upload/imagelogo/logodefault3.jpg"
                                alt="MusicLogo">
                        </a>


                    </div>
                </nav>
                <ul class="sidebar-main">
                    <li class="individual type-main">
                        <a href="/mymusic" class="link-main">
                            <div class="main-icon">
                                <i class="fas fa-music"></i>
                            </div>
                            <div class="main-name">
                                <span>Cá Nhân</span>
                            </div>
                        </a>
                    </li>
                    <li class="discover type-main">
                        <a href="/" class="link-main">
                            <div class="main-icon">
                                <i class="fas fa-plus-circle"></i>
                            </div>
                            <div class="main-name">
                                <span>Khám Phá</span>
                            </div>
                        </a>
                    </li>
                    <li class="zingChat type-main">
                        <a href="" class="link-main">
                            <div class="main-icon">
                                <i class="fas fa-comment-dots"></i>
                            </div>
                            <div class="main-name">
                                <span>#zingchat</span>
                            </div>
                        </a>
                    </li>
                    <li class="radio type-main">
                        <a href="" class="link-main">
                            <div class="main-icon">
                                <i class="fas fa-random"></i>
                            </div>
                            <div class="main-name">
                                <span>radio</span>
                            </div>
                        </a>
                    </li>
                    <li class="follow type-main">
                        <a href="" class="link-main">
                            <div class="main-icon">
                                <i class="far fa-dot-circle"></i>
                            </div>
                            <div class="main-name">
                                <span>Theo Dõi</span>
                            </div>
                        </a>
                    </li>
                </ul>
                <div class="sidebar-divide">

                </div>
                <div class="sidebar-more">
                    <nav class="sidebar-more--srcoll">
                        <ul class="more-name">
                            <li class="more-title">
                                <a href="">
                                    <i class="fas fa-compact-disc"></i>
                                    <span>Nhạc Mới</span>
                                </a>
                            </li>
                            <li class="more-title">
                                <a href="">
                                    <i class="fas fa-compact-disc"></i>
                                    <span>Nhạc Mới</span>
                                </a>
                            </li>
                            <li class="more-title">
                                <a href="">
                                    <i class="fas fa-compact-disc"></i>
                                    <span>Nhạc Mới</span>
                                </a>
                            </li>
                            <li class="more-title">
                                <a href="">
                                    <i class="fas fa-compact-disc"></i>
                                    <span>Nhạc Mới</span>
                                </a>
                            </li>

                        </ul>
                        <div class="vip-banner">
                            <div class="describe-vip">
                                Nghe nhạc không quảng cáo cùng kho nhạc VIP
                            </div>
                            <a href="#" class="buy-vip">
                                mua vip
                            </a>
                        </div>
                        <div class="sidebar-libary">
                            <div class="sidebar-libary-title">
                                thư viện
                            </div>
                            <div class="icon-labary">
                                <a href="#" class="link-libary">
                                    <i class="fas fa-pencil-alt"></i>
                                </a>
                            </div>
                        </div>
                        <ul class="sidebar-libary-personal">
                            <li class="libary-personal-item">
                                <a href="#" class="link-libary-item">
                                    <i class="icon-p-item">
                                        <img src="https://zjs.zadn.vn/zmp3-desktop/releases/v1.0.13/static/media/my-song.cf0cb0b4.svg"
                                            alt="icon">
                                    </i>
                                    <span>Bài Hát</span>
                                </a>
                            </li>

                            <li class="libary-personal-item">
                                <a href="#" class="link-libary-item">
                                    <i class="icon-p-item">
                                        <img src="https://zjs.zadn.vn/zmp3-desktop/releases/v1.0.13/static/media/my-playlist.7e92a5f0.svg"
                                            alt="icon">
                                    </i>
                                    <span>Playlist</span>
                                </a>
                            </li>

                            <li class="libary-personal-item">
                                <a href="#" class="link-libary-item">
                                    <i class="icon-p-item">
                                        <img src="https://zjs.zadn.vn/zmp3-desktop/releases/v1.0.13/static/media/my-history.374cb625.svg"
                                            alt="icon">
                                    </i>
                                    <span>Gần Đây</span>
                                </a>
                            </li>

                        </ul>
                    </nav>
                </div>
                <div class="sidebar-divide">

                </div>
                <div class="add-list">
                    <button class="sidebar-btn">
                        <i class="fas fa-plus"></i>
                        <span>Tạo playlist mới</span>
                    </button>
                </div>

            </div>

        </aside>
        {{!-- header --}}

        {{!-- body --}}
        {{> footer}}

        {{!-- ovelaytheme --}}
        <div class="overlay__theme">
            <div class="control__theme">
                <div class="control_theme__container">
                    <div class="theme__container--header">
                        <div class="topic--header">
                            Giao Diện
                        </div>
                        <button class="close--theme" data-toggle="tooltip" data-placement="top" title="Thoát">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                    <div class="theme__select__container">
                        <div class="theme__selecte">
                            <div class="theme__selecte--title">
                                <span>Chủ Đề</span>
                            </div>
                            <div class="theme__selecte--options">
                                <div class="item__option" >
                                    <div class="item__option--image_blue">

                                        <figure>
                                            <img src="https://zmp3-static.zadn.vn/skins/zmp3-v6.1/images/theme/rose.jpg"
                                                alt="">
                                        </figure>
                                        <div class="overlay__option">
                                            <div class="option--accept--black">
                                                <div>
                                                    Áp Dụng
                                                </div>

                                            </div>
                                            <div class="option--demo--black">
                                                <div>
                                                    Xem Trước
                                                </div>
                                            </div>
                                        </div>


                                    </div>
                                    <div class="item__option--name">
                                        Rosé
                                    </div>

                                </div>

                            </div>
                        </div>
                        
                    </div>

                </div>
            </div>
        </div>

        {{!-- --}}
    </div>

    {{!-- {{> sidebar}}
    {{> header}} --}}




    <script src="https://code.jquery.com/jquery-3.6.0.min.js"
        integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"
        integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"
        crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"
        integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"
        crossorigin="anonymous"></script>

    {{!-- overlay theme --}}
    <script>
        var btnClose = $('.close--theme')
        var overlayTheme = $('.overlay__theme')
        var btnTheme = $('button.btn-theme');

        btnClose.click(() => {
            overlayTheme.css("display", "none");
        })

        btnTheme.click(() => {
            overlayTheme.css("display", "block");


        })
        //change theme black
        var toggleSwitchTheme = $('.option--accept');
        var currentTheme = JSON.parse(localStorage.getItem('theme'));
        var isBlack = false;

        if (currentTheme) {
            document.documentElement.setAttribute('data-theme', currentTheme);
            if (currentTheme === 'black') {
                isBlack = true;
                console.log(isBlack)
            }
        }





    </script>
    {{!-- owlcarousel --}}
    <script src="/owlcarousel/owl.carousel.min.js"></script>
    <script>
        $(document).ready(function () {
            $('.owl-carousel').owlCarousel({
                loop: true,
                margin: 10,
                responsiveClass: true,
                mouseDrag: false,
                responsive: {
                    0: {
                        items: 1,
                        nav: true
                    },
                    600: {
                        items: 3,
                        nav: false
                    },
                    1000: {
                        items: 5,
                        nav: true,
                        loop: false
                    }
                }
            })

        });
    </script>
    {{!-- tool tips bootstrap --}}
    <script>
        $(document).ready(function () {
            $('[data-toggle="tooltip"]').tooltip();

        });
    </script>


    <script>

        const CONFIG_STORAGE = 'MUSIC_PLAYER';
        const arrowRetreat = document.querySelector('.arrow-retreat');
        const arrowAdvance = document.querySelector('.arrow-advance');
        const playlist = document.querySelector('.playlist');
        const playBtn = document.querySelector('.btn-toggle-play');
        const progress = document.querySelector('#progress');
        const progressVolume = document.querySelector('#progress_volume');

        const progressBar = document.querySelector('#progress-bar');
        const progressBarVolume = document.querySelector('#progress-bar_volume');
        const avt_song = document.querySelector('.avt-song');
        const nameSong = document.querySelector('.name-song marquee');
        const nameSinger = document.querySelector('.name-singer span');
        const audio = document.querySelector('#audio');
        const timeLeft = document.querySelector('.time-left-song');
        const timeRight = document.querySelector('.time-right-song');
        const btnPrevSong = document.querySelector('.btn-prev-song');
        const btnNextSong = document.querySelector('.btn-next-song');
        const btnRandomSong = document.querySelector('.btn-random');
        const btnLoopSong = document.querySelector('.btn-repeat');
        const optionAcceptBlack = document.querySelector('.option--accept--black');
        const demoThemeBlack = document.querySelector('.option--demo--black')

        const app = {
            currentIndex: 0,
            isPlaying: false,
            isRandom: false,
            isRepeat: false,
            isClickBack: false,
            isClickNext: true,
            isMute: false,
            theVolume: 0.5,
            

            config: JSON.parse(localStorage.getItem(CONFIG_STORAGE)) || {},


            songs: [

                {
                    name: "Sóng",
                    singer: "Dzàng Hoàng x Thúy Anh x Bảo Nguyên",
                    path: "/song/song1.mp3",
                    image: "/img/song1_img.jpg",
                    timeSong: "05:05"
                },
                {
                    name: "Đã Từng",
                    singer: "Bùi Anh Tuấn x Dương Hoàng Yến",
                    path: "/song/song2.mp3",
                    image:
                        "/img/song2_img.jpg",
                    timeSong: "04:56"
                },
                {
                    name: "Suýt Nữa Thì",
                    singer: "Andiez",
                    path:
                        "/song/song3.mp3",
                    image: "/img/song3_img.jpg",
                    timeSong: "04:43"
                },
                {
                    name: "Ngày Mai Em Đi (Touliver Mix)",
                    singer: "Touliver,Lê Hiếu,SooBin",
                    path:
                        "/song/song4.mp3",
                    image: "/img/song4_img.jpg",
                    timeSong: "03:38"
                },
                {
                    name: "Giả Vờ Nhưng Em Yêu Anh",
                    singer: "Miu Lê",
                    path:
                        "/song/song5.mp3",
                    image: "/img/song5_img.jpg",
                    timeSong: "03:55"
                },
                {
                    name: "Muộn Rồi Mà Sao Còn",
                    singer: "Sơn Tùng M-TP",
                    path:
                        "/song/song6.mp3",
                    image: "/img/song6_img.jpg",
                    timeSong: "04:35"
                },
            ],
            setConfig: function (key, value) {
                this.config[key] = value;
                localStorage.setItem(CONFIG_STORAGE, JSON.stringify(this.config))
            },
            render: function () {
                const htmls = this.songs.map((song, index) => {
                    return `
                        <div class="song ${index === this.currentIndex ? "active" : ""
                        }" data-index="${index}">
                            <div class="thumb"
                                style="background-image: url('${song.image}')">
                            </div>
                            <div class="body">
                                <div class="name">
                                    <div class="title">${song.name}</div>
                                    <div class="author">${song.singer}</div>
                                </div>
                                <div class="timeSong">${song.timeSong}</div>
                            </div>
                            <div class="option">
                                <i class="fas fa-ellipsis-h"></i>
                            </div>
                        </div>
                    `;
                });

                playlist.innerHTML = htmls.join("");

            },
            formatTime: function (sec_num) {
                let hours = Math.floor(sec_num / 3600);
                let minutes = Math.floor((sec_num - hours * 3600) / 60);
                let seconds = Math.floor(sec_num - hours * 3600 - minutes * 60);

                hours = hours < 10 ? (hours > 0 ? '0' + hours : 0) : hours;

                if (minutes < 10) {
                    minutes = '0' + minutes;
                }
                if (seconds < 10) {
                    seconds = '0' + seconds;
                }
                return (hours !== 0 ? hours + ':' : '') + minutes + ':' + seconds;
            },
            getDuration: function (audio, app) {
                return new Promise(function (resolve) {
                    audio.onloadedmetadata = function () {
                        resolve(app.formatTime(audio.duration));
                    }

                });
            },
            //hàm này để định nghĩa 1 property.. 
            //như là song tại CurrentIndex sẽ được gọi là CurrentSong
            defineProperties: function () {
                Object.defineProperty(this, 'currentSong', {
                    //getter : thì phải là hàm function(){}
                    get: function () {
                        return this.songs[this.currentIndex]
                    }
                })
            },
            scrollToView: function () {
                document.querySelector(".song.active").scrollIntoView({
                    behavior: "smooth",
                    block: "nearest"
                })
            },
            loadCurrentSong: function () {
                avt_song.style.backgroundImage = `url('${this.currentSong.image}')`
                nameSong.textContent = this.currentSong.name;
                nameSinger.textContent = this.currentSong.singer;
                audio.src = this.currentSong.path;
                //console.log(audio.duration);
                this.setConfig('indexStore', this.currentIndex);
            },
            nextSong: function () {
                this.currentIndex++;
                if (this.currentIndex >= this.songs.length) {
                    this.currentIndex = 0;
                }
                this.loadCurrentSong();
                this.render();
                this.scrollToView();
            },
            previousSong: function () {
                this.currentIndex--;

                if (this.currentIndex < 0) {
                    this.currentIndex = this.songs.length - 1;

                    this.loadCurrentSong();
                }
                this.loadCurrentSong();
                this.render();
                this.scrollToView();
            },
            randomSong: function () {
                var indexRandom;
                do {
                    indexRandom = Math.floor(Math.random() * this.songs.length)

                }
                while (indexRandom === this.currentIndex)
                this.currentIndex = indexRandom;
                this.loadCurrentSong();
                this.render();
                this.scrollToView();
            },
            handleEvents: function () {
                const _this = this;
                // bug là nếu nhắn vào đang active thì nó vẫn đổi true thành false
                // nên nó sẽ đổi màu ngược lại
                arrowRetreat.onclick = (e) => {
                    //e.preventDefault();
                    _this.isClickBack = !_this.isClickBack
                    _this.isClickNext = !_this.isClickNext

                    arrowRetreat.classList.toggle('active-trans-page', _this.isClickBack)
                    arrowAdvance.classList.toggle('active-trans-page', _this.isClickNext)
                    _this.setConfig('isClickBack', _this.isClickBack);
                    _this.setConfig('isClickNext', _this.isClickNext);




                }
                arrowAdvance.onclick = (e) => {
                    //e.preventDefault();
                    _this.isClickBack = !_this.isClickBack
                    _this.isClickNext = !_this.isClickNext

                    arrowRetreat.classList.toggle('active-trans-page', _this.isClickBack)
                    arrowAdvance.classList.toggle('active-trans-page', _this.isClickNext)
                    _this.setConfig('isClickBack', _this.isClickBack);
                    _this.setConfig('isClickNext', _this.isClickNext);
                }

                //xử lí quay avatar
                const turnAroundAvt = avt_song.animate([
                    {
                        transform: 'rotate(360deg)'
                    }
                ], {
                    duration: 10000,
                    iterations: Infinity
                })
                turnAroundAvt.pause();
                //Xử lí random hiện màu btn random
                btnRandomSong.onclick = () => {
                    app.isRandom = !app.isRandom;
                    _this.setConfig('isRandom', _this.isRandom);
                    btnRandomSong.classList.toggle('active', app.isRandom);

                }
                // Xử Lí khi ấn vào Loop hiện màu
                btnLoopSong.onclick = () => {
                    app.isRepeat = !app.isRepeat;
                    _this.setConfig('isRepeat', _this.isRepeat);
                    btnLoopSong.classList.toggle('active', app.isRepeat);

                }

                //xử lí next song 
                btnNextSong.onclick = () => {
                    if (app.isRandom) {
                        app.randomSong()
                    } else {
                        app.nextSong();
                    }

                    audio.play();
                    turnAroundAvt.play();
                };
                btnPrevSong.onclick = () => {
                    if (app.isRandom) {
                        app.randomSong()
                    } else {
                        app.previousSong();
                    }

                    audio.play();
                    turnAroundAvt.play();
                }
                // Xử lý khi click play
                // Handle when click play
                playBtn.onclick = function () {
                    if (_this.isPlaying) {
                        audio.pause();
                        turnAroundAvt.pause();

                    } else {
                        audio.play();
                        turnAroundAvt.play();

                    }
                };
                // xử lí khi play
                audio.onplay = () => {
                    _this.isPlaying = true;
                    playBtn.classList.add('playing');

                };
                // khi pause
                audio.onpause = () => {
                    _this.isPlaying = false;
                    playBtn.classList.remove('playing');

                };
                var onTua = false;
                // tua bài hát
                audio.ontimeupdate = () => {
                    if (audio.duration) {
                        if (!onTua) {
                            var percentSong = (audio.currentTime / audio.duration * 100);
                            //progress.value = percentSong;
                            progressBar.style.width = `${percentSong}%`
                            //console.log(audio.currentTime)


                        }
                    }

                    timeLeft.innerHTML = `<span>${this.formatTime(audio.currentTime)}</span>`

                    this.getDuration(audio, this).then(function (time) {
                        timeRight.innerHTML = `<span>${time}</span>`
                    })
                    // xử lí khi click random và loop
                    var timeRun = audio.currentTime;
                    _this.setConfig('currentTime', timeRun);
                    var endTime = audio.duration;
                    if (timeRun === endTime) {
                        if (app.isRandom && !app.isRepeat) {
                            app.randomSong();
                            audio.play();
                        }
                        else if (!app.isRandom && !app.isRepeat) {
                            app.nextSong();
                            audio.play();
                        }
                        else if (app.isRepeat && !app.isRandom) {
                            audio.play();
                        }
                        else {

                            audio.play();
                        }


                    }

                };
                // xử lí khi click vào bài hát
                playlist.onclick = (e) => {


                    if (!e.target.closest('.song.active') || e.target.closest('.option')) {
                        if (!e.target.closest('.song.active')) {
                            app.currentIndex = Number(e.target.closest('.song').dataset.index);
                            console.log(app.currentIndex)
                            app.render();
                            app.loadCurrentSong();
                            turnAroundAvt.play();
                            audio.play();


                        }
                    }
                }

                progress.onchange = (e) => {
                    onTua = false;
                    audio.currentTime = (audio.duration * e.target.value / 100);
                    //console.log(audio.currentTime)
                };
                progress.oninput = (e) => {
                    onTua = true;
                    let percentSong = e.target.value;
                    progressBar.style.width = `${percentSong}%`



                };
                // volume ban đầu
                audio.volume = app.theVolume
                progressBarVolume.style.width = `50%`
                // volume sau khi click vào thay đổi
                progressVolume.oninput = (e) => {

                    let percentVolume = e.target.value;

                    progressBarVolume.style.width = `${percentVolume}%`
                    audio.volume = percentVolume / 100
                    _this.setConfig('theVolume', percentVolume / 100);
                    if (progressBarVolume.style.width === '0%') {
                        document.querySelector('.volumeIcon').classList.remove('fa-volume-down')
                        document.querySelector('.volumeIcon').classList.add('fa-volume-mute')
                    }
                    else {
                        document.querySelector('.volumeIcon').classList.add('fa-volume-down')
                        document.querySelector('.volumeIcon').classList.remove('fa-volume-mute')
                    }

                };
                // click vào mute volume
                document.querySelector('.volume-icon').onclick = (e) => {
                    app.isMute = !app.isMute;

                    if (app.isMute) {
                        audio.volume = 0;
                        progressBarVolume.style.width = `0%`
                        document.querySelector('.volumeIcon').classList.remove('fa-volume-down')
                        document.querySelector('.volumeIcon').classList.add('fa-volume-mute')

                    }
                    else {
                        audio.volume = this.config.theVolume;
                        progressBarVolume.style.width = `${this.config.theVolume * 100}%`
                        document.querySelector('.volumeIcon').classList.add('fa-volume-down')
                        document.querySelector('.volumeIcon').classList.remove('fa-volume-mute')

                    }
                }
                //phát tất cả
                $('.option-play-all').click(function () {
                    audio.play();
                })

            },
            //thay đổi giao diện
            changeTheme: function () {
                var isClickCloseTheme = false;
                optionAcceptBlack.onclick = () => {
                    
                    document.querySelector('.overlay__theme').style.display = 'none'
                    // chưa lưu vô local storage
                    document.documentElement.dataset.theme = 'blue'
                    document.querySelector('.item__option--image_blue').classList.add('active')
                    document.querySelector('.mucsicWeb').style.backgroundImage = 'url(\'https://zmp3-static.zadn.vn/skins/zmp3-v6.1/images/theme-background/rose.jpg\')'
                
                }
                demoThemeBlack.onclick = () => {
                    document.documentElement.dataset.theme = 'blue'
                    isClickCloseTheme = true;
                    document.querySelector('.close--theme').onclick = () => {
                        if(isClickCloseTheme)
                        document.documentElement.dataset.theme = ''

                    }
                }

            },
            loadConfig: function () {
                this.isClickBack = this.config.isClickBack;
                this.isClickNext = this.config.isClickNext;
                this.isRandom = this.config.isRandom;
                this.isRepeat = this.config.isRepeat;
                this.currentIndex = this.config.indexStore;
                audio.currentTime = this.config.currentTime;
                this.theVolume = this.config.theVolume;
            },
            start: function () {
                // tải lại những cái đã lưu trong local Storage
                this.loadConfig();
                // thay đổi giao diện
                this.changeTheme();
                //định nghĩa các thuộc tính
                this.defineProperties();
                //xử lí xử kiện cho music
                this.handleEvents();
                //
                this.loadCurrentSong();
                // time play
                //this.timePlay();
                //render lại danh sách bài hát
                this.render();
                btnRandomSong.classList.toggle('active', app.isRandom);
                btnLoopSong.classList.toggle('active', app.isRepeat);
                arrowRetreat.classList.toggle('active-trans-page', app.isClickBack)
                arrowAdvance.classList.toggle('active-trans-page', app.isClickNext)

                //volume
                progressBarVolume.style.width = `${app.theVolume * 100}%`
            }
        }
        app.start();
    </script>



</body>

</html>